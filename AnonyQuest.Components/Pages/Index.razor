@page "/"
@page "/index"
@inject IAuthenticationStateService authService
@inject IQuestionnaireRepository questionnaireRepository
@inject NavigationManager NavigationManager
@attribute [Authorize]

<div>
    <h3>Seus Questionários:</h3>
    <QuestionnaireTable Questionnaires="@PersonalQuestionnaires" TableId="YourQuestionnaireTable" IsAuthorTable="true" OnClickSearchQuestionnaireDetails="SearchQuestionnaireDetails"/>
</div>
<div>
    <h3>Questionários Pendentes:</h3>
    <QuestionnaireTable Questionnaires="@ReceivedQuestionnaires" TableId="ReceivedQuestionnairesTable" IsAuthorTable="false" OnClickSearchQuestionnaireDetails="SearchQuestionnaireDetails"/>
</div>


@code{
    private List<Questionnaire> PersonalQuestionnaires;
    private List<Questionnaire> ReceivedQuestionnaires;

    protected async override Task OnInitializedAsync()
    {
        var userEmail = await authService.GetCurrentUserEmail();
        var response = await questionnaireRepository.GetIndexPageDTO(userEmail);
        PersonalQuestionnaires = response.PersonalQuestionnaires;
        ReceivedQuestionnaires = response.ReceivedQuestionnaires;
    }

    protected void SearchQuestionnaireDetails(int questionnaireId)
    {
        NavigationManager.NavigateTo($"questionnaire/{questionnaireId}/Details", forceLoad: false);
    }
}